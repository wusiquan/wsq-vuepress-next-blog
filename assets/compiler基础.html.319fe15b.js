import{_ as s,o as n,c as l,e as a}from"./app.08d597d0.js";const p={},o=a(`<h1 id="hello" tabindex="-1"><a class="header-anchor" href="#hello" aria-hidden="true">#</a> hello</h1><h2 id="compiler" tabindex="-1"><a class="header-anchor" href="#compiler" aria-hidden="true">#</a> compiler</h2><p>compiler-sfc/parse.ts\u4E2D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#282A36;"><code><span class="line"><span style="color:#7B7F8B;">// compiler-sfc/parse.ts</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> ast </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> compiler.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(source, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// there are no components at SFC parsing level</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isNativeTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// preserve all whitespaces</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isPreTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getTextMode</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> ({ </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">props</span><span style="color:#F6F6F4;"> }, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">onError</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528compiler-dom/index.ts\u7684parse\u51FD\u6570 \u800C\u5B83\u4F1A\u8C03\u7528compiler-core/parse.ts\u7684baseParse\u51FD\u6570\uFF0C\u5176\u4E2D\u9009\u9879\u4F1Aextend parseOptions</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#282A36;"><code><span class="line"><span style="color:#7B7F8B;">// compiler-dom/index.ts</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">template</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParserOptions</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {})</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">RootNode</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">baseParse</span><span style="color:#F6F6F4;">(template, </span><span style="color:#62E884;">extend</span><span style="color:#F6F6F4;">({}, parserOptions, options))</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// parseOptions\u5E38\u91CF</span></span>
<span class="line"><span style="color:#7B7F8B;">// compiler-dom/parseOptions.ts</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> parserOptions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParserOptions</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  isVoidTag,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isNativeTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isHTMLTag</span><span style="color:#F6F6F4;">(tag) </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isSVGTag</span><span style="color:#F6F6F4;">(tag),</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isPreTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> tag </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pre</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  decodeEntities</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> __BROWSER__ </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> decodeHtmlBrowser </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> decodeHtml,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isBuiltInComponent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">symbol</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getNamespace</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">DOMNamespaces</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// https://html.spec.whatwg.org/multipage/parsing.html#parsing-html-fragments</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getTextMode</span><span style="color:#F6F6F4;">({ </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">ns</span><span style="color:#F6F6F4;"> }</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">TextModes</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2DParserOptions\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u5728compiler-core/options.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#282A36;"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">interface</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParserOptions</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">extends</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ErrorHandlingOptions</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#97E1F1;font-style:italic;">CompilerCompatOptions</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * e.g. platform native elements, e.g. \`&lt;div&gt;\` for browsers</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isNativeTag</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * e.g. native elements that can self-close, e.g. \`&lt;img&gt;\`, \`&lt;br&gt;\`, \`&lt;hr&gt;\`</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isVoidTag</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * e.g. elements that should preserve whitespace inside, e.g. \`&lt;pre&gt;\`</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isPreTag</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Platform-specific built-in components e.g. \`&lt;Transition&gt;\`</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isBuiltInComponent</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">symbol</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Separate option for end users to extend the native elements list</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isCustomElement</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">void</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Get tag namespace</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getNamespace</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">Namespace</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Get text parsing mode for this element</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getTextMode</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#FFB86C;font-style:italic;">node</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span></span>
<span class="line"><span style="color:#F6F6F4;">  ) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">TextModes</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * </span><span style="color:#F286C4;">@default</span><span style="color:#7B7F8B;"> </span><span style="color:#FFB86C;font-style:italic;">[&#39;{{&#39;,</span><span style="color:#7B7F8B;"> &#39;}}&#39;]</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  delimiters</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> [</span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Whitespace handling strategy</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  whitespace</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">preserve</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">condense</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Only needed for DOM compilers</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">decodeEntities</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">rawText</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">asAttr</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">/**</span></span>
<span class="line"><span style="color:#7B7F8B;">   * Whether to keep comments in the templates AST.</span></span>
<span class="line"><span style="color:#7B7F8B;">   * This defaults to \`true\` in development and \`false\` in production builds.</span></span>
<span class="line"><span style="color:#7B7F8B;">   */</span></span>
<span class="line"><span style="color:#F6F6F4;">  comments</span><span style="color:#F286C4;">?:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">boolean</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728@vitejs/plugin-vue\u4E2D\u8C03\u7528compiler-sfc/compileTemplate\u7684compileTemplate\u51FD\u6570 compileTemplate\u51FD\u6570\u4F1A\u8C03\u7528doCompileTemplate\uFF0CdoCompileTemplate\u4F1A\u8C03\u7528compiler-dom/index\u7684compile\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#282A36;"><code><span class="line"><span style="color:#7B7F8B;">// compiler-sfc/compileTemplat\u7684doCompileTemplate\u51FD\u6570\u4E2D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> { code, ast, preamble, map } </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> compiler.</span><span style="color:#62E884;">compile</span><span style="color:#F6F6F4;">(source, {</span></span>
<span class="line"><span style="color:#F6F6F4;">  mode</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">module</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  prefixIdentifiers</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  hoistStatic</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  cacheHandlers</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  ssrCssVars</span><span style="color:#F286C4;">:</span></span>
<span class="line"><span style="color:#F6F6F4;">    ssr </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> ssrCssVars </span><span style="color:#F286C4;">&amp;&amp;</span><span style="color:#F6F6F4;"> ssrCssVars.length</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">genCssVarsFromList</span><span style="color:#F6F6F4;">(ssrCssVars, shortId, isProd)</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  scopeId</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> scoped </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> longId </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">undefined</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  slotted,</span></span>
<span class="line"><span style="color:#F6F6F4;">  sourceMap</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">true</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">compilerOptions,</span></span>
<span class="line"><span style="color:#F6F6F4;">  nodeTransforms</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> nodeTransforms.</span><span style="color:#62E884;">concat</span><span style="color:#F6F6F4;">(compilerOptions.nodeTransforms </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> []),</span></span>
<span class="line"><span style="color:#F6F6F4;">  filename,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">onError</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">e</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> errors.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(e),</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">onWarn</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">w</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> warnings.</span><span style="color:#62E884;">push</span><span style="color:#F6F6F4;">(w)</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// compiler-dom/index\u7684compile\u51FD\u6570\u4E2D</span></span>
<span class="line"><span style="color:#62E884;">baseCompile</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  template,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">extend</span><span style="color:#F6F6F4;">({}, parserOptions, options, {</span></span>
<span class="line"><span style="color:#F6F6F4;">    nodeTransforms</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> [</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// ignore &lt;script&gt; and &lt;tag&gt;</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// this is not put inside DOMNodeTransforms because that list is used</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#7B7F8B;">// by compiler-ssr to generate vnode fallback branches</span></span>
<span class="line"><span style="color:#F6F6F4;">      ignoreSideEffectTags,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">DOMNodeTransforms,</span></span>
<span class="line"><span style="color:#F6F6F4;">      </span><span style="color:#F286C4;">...</span><span style="color:#F6F6F4;">(options.nodeTransforms </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> [])</span></span>
<span class="line"><span style="color:#F6F6F4;">    ],</span></span>
<span class="line"><span style="color:#F6F6F4;">    directiveTransforms</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">extend</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">      {},</span></span>
<span class="line"><span style="color:#F6F6F4;">      DOMDirectiveTransforms,</span></span>
<span class="line"><span style="color:#F6F6F4;">      options.directiveTransforms </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> {}</span></span>
<span class="line"><span style="color:#F6F6F4;">    ),</span></span>
<span class="line"><span style="color:#F6F6F4;">    transformHoist</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> __BROWSER__ </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> </span><span style="color:#BF9EEE;">null</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> stringifyStatic</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// \u5176\u4E2Dcompiler-dom/parserOptions\u7684paserOptions</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> paserOptions</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParserOptions</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  isVoidTag,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isNativeTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isHTMLTag</span><span style="color:#F6F6F4;">(tag) </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isSVGTag</span><span style="color:#F6F6F4;">(tag),</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isPreTag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> tag </span><span style="color:#F286C4;">===</span><span style="color:#F6F6F4;"> </span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">pre</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  decodeEntities</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> __BROWSER__ </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> decodeHtmlBrowser </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> decodeHtml,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">isBuiltInComponent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> (</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">symbol</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#7B7F8B;">// https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getNamespace</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">parent</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">|</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">undefined</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">DOMNamespaces</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  },</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#62E884;">getTextMode</span><span style="color:#F6F6F4;">({ </span><span style="color:#FFB86C;font-style:italic;">tag</span><span style="color:#F6F6F4;">, </span><span style="color:#FFB86C;font-style:italic;">ns</span><span style="color:#F6F6F4;"> }</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ElementNode</span><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">TextModes</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>compiler-dom/index\u7684compile\u51FD\u6570\u4F1Acompiler-core/compile\u7684baseCompile\u51FD\u6570 \u5B83\u4F1A\u8C03\u7528compiler-core/parse\u7684baseParse\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#282A36;"><code><span class="line"><span style="color:#7B7F8B;">// compiler-core/compile\u7684compile\u51FD\u6570</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> ast </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">isString</span><span style="color:#F6F6F4;">(template) </span><span style="color:#F286C4;">?</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">baseParse</span><span style="color:#F6F6F4;">(template, options) </span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> template</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7B7F8B;">// compiler-core/parse\u7684baseParse\u73CA\u745A</span></span>
<span class="line"><span style="color:#F286C4;">export</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">function</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">baseParse</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">content</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">string</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#FFB86C;font-style:italic;">options</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">ParserOptions</span><span style="color:#F6F6F4;"> </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {}</span></span>
<span class="line"><span style="color:#F6F6F4;">)</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> </span><span style="color:#97E1F1;font-style:italic;">RootNode</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> context </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createParserContext</span><span style="color:#F6F6F4;">(content, options)</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> start </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">getCursor</span><span style="color:#F6F6F4;">(context)</span></span>
<span class="line"><span style="color:#F6F6F4;">  </span><span style="color:#F286C4;">return</span><span style="color:#F6F6F4;"> </span><span style="color:#62E884;">createRoot</span><span style="color:#F6F6F4;">(</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">parseChildren</span><span style="color:#F6F6F4;">(context, TextModes.</span><span style="color:#BF9EEE;">DATA</span><span style="color:#F6F6F4;">, []),</span></span>
<span class="line"><span style="color:#F6F6F4;">    </span><span style="color:#62E884;">getSelection</span><span style="color:#F6F6F4;">(context, start)</span></span>
<span class="line"><span style="color:#F6F6F4;">  )</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>https://docs.chenjianhui.site/vuepress-plugin-demo-container/zh/started.html#%E5%AE%89%E8%A3%85 https://calebman.github.io/vuepress-plugin-demo-container/complex.html#todomvc-example</p><p>https://github.com/markdown-it/markdown-it-container</p><p>element https://github.com/ElemeFE/element/blob/dev/build/md-loade</p>`,15),e=[o];function t(F,c){return n(),l("div",null,e)}var i=s(p,[["render",t],["__file","compiler\u57FA\u7840.html.vue"]]);export{i as default};
